#include <stdlib.h>
#include "cactus.h"

Cactus cacti[MAX_CACTUS_COUNT];
static size_t cactus_count;

static const uint32_t cactus0[] = {
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xF0000000, 0x0000FFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xF0000000, 0x0000FFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00110000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00110000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000FFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x0000000F, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x000FFFFF,
    0xFF00FFFF, 0xFFFFFFF0, 0x00000FFF, 0xFFFFFFFF,
    0xFF00FFFF, 0xFFFFFFF0, 0x00000FFF, 0xFFFFFFFF,
    0xFF00FFFF, 0xFFFFF000, 0x00000FFF, 0xFFFFFFFF,
    0xFF000FFF, 0xFFF00000, 0x00000000, 0xFFFFFFFF,
    0xFF00000F, 0xF0000000, 0x00000FF0, 0xFFFFFFFF,
    0xFF00000F, 0xF0000000, 0x00000FF0, 0xFFFFFFFF,
    0xFF000000, 0x00000000, 0x00000FFF, 0xFFFFFFFF,
    0xFFF00000, 0x00000000, 0x00000FFF, 0xFFFFFFFF,
    0xFFFF0000, 0x00000000, 0x00000FFF, 0xFFFFFFFF,
    0xFFFF0000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF,
    0xFFFFF000, 0x00000000, 0x0000FFFF, 0xFFFFFFFF,
    0xFFFFFFF0, 0x00000000, 0x000FFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0x00000000, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xF0000FF0, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xF000FFFF, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xF00FFFFF, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xF00FFFFF, 0x0FFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xF000FFFF, 0x000FFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF,
    0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
};

static Sprite cactus_sprites[CACTUS_VARIANT_COUNT] = {{cactus0, 4, 32}};

void init_cacti() {
	size_t i;
	for (i = 0; i < MAX_CACTUS_COUNT; i++) {
		cacti[i].active = false;
	}

	cactus_count = 0;
}

void add_cactus() {
	int i;
	int available_index;

	if (cactus_count == MAX_CACTUS_COUNT) {
		return;
	}

	for (i = 0; i < MAX_CACTUS_COUNT; i++) {
		if (!cacti[i].active) {
			available_index = i;
			break;
		}
	}


	size_t variant = rand() % CACTUS_VARIANT_COUNT;

	cacti[available_index].active = true;
	cacti[available_index].sprite = &cactus_sprites[variant];
	cacti[available_index].x = 79 - cacti[available_index].sprite->width;
	cacti[available_index].y = 240;

	++cactus_count;
	creation_index = (creation_index + 1) % MAX_CACTUS_COUNT;
}

void show_cacti() {
	size_t cactus_index = kill_index;
	for (size_t i = 0; i < cactus_count; i++) {

	}
}
